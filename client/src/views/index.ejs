<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <title>Play with stranger</title>
  <meta content="" name="description">
  <meta content="" name="keywords">

  <!-- Favicons -->
  <link href="img/favicon.png" rel="icon">
  <link href="img/apple-touch-icon.png" rel="apple-touch-icon">

  <!-- Google Fonts -->
  <link href="https://fonts.gstatic.com" rel="preconnect">
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
    rel="stylesheet">

  <!-- Vendor CSS Files -->
  <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
  <link href="vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
  <link href="vendor/quill/quill.snow.css" rel="stylesheet">
  <link href="vendor/quill/quill.bubble.css" rel="stylesheet">
  <link href="vendor/remixicon/remixicon.css" rel="stylesheet">


  <!-- Template Main CSS File -->
  <link href="css/style.css" rel="stylesheet">


  <link href="https://cdn.datatables.net/v/bs5/jq-3.7.0/dt-2.1.7/b-3.1.2/datatables.min.css" rel="stylesheet">
  

  <script src="https://cdn.datatables.net/v/bs5/jq-3.7.0/dt-2.1.7/b-3.1.2/datatables.min.js"></script>

  <!-- =======================================================
  * Template Name: NiceAdmin
  * Template URL: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/
  * Updated: Apr 20 2024 with Bootstrap v5.3.3
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
</head>

<body class="toggle-sidebar">

  <!-- ======= Header ======= -->
  <header id="header" class="header fixed-top d-flex align-items-center">

    <div class="d-flex align-items-center justify-content-between">
      <a href="index" class="logo d-flex align-items-center">
        <img src="img/logo.png" alt="">
        <span class="d-none d-lg-block">Play With Stranger</span>
      </a>
    </div><!-- End Logo -->

    <nav class="header-nav ms-auto">
      <ul class="d-flex align-items-center">

        <li class="nav-item dropdown pe-3">

          <a class="nav-link nav-profile d-flex align-items-center pe-0" href="#" data-bs-toggle="dropdown">
            <img src="img/profile-img.jpg" alt="Profile" class="rounded-circle">
            <span class="d-none d-md-block dropdown-toggle ps-2 usernameDisplay">Tên</span>
          </a><!-- End Profile Iamge Icon -->

          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow profile">
            <li class="dropdown-header">
              <h6 class="usernameDisplay">Tên</h6>
            </li>
            <li>
              <hr class="dropdown-divider">
            </li>

            <li>
              <a class="dropdown-item d-flex align-items-center" href="user-profile">
                <i class="bi bi-person"></i>
                <span>Hồ Sơ</span>
              </a>
            </li>
            <li>
              <hr class="dropdown-divider">
            </li>

            <li>
              <hr class="dropdown-divider">
            </li>
            <li>
              <hr class="dropdown-divider">
            </li>

            <li>
              <a class="dropdown-item d-flex align-items-center" onclick="logout()" href="#">
                <i class="bi bi-box-arrow-right"></i>
                <span>Đăng Xuất</span>
              </a>
            </li>

          </ul><!-- End Profile Dropdown Items -->
        </li><!-- End Profile Nav -->

      </ul>
    </nav><!-- End Icons Navigation -->

  </header><!-- End Header -->


  <main id="main" class="main">

    <section class="section">
      <div class="row">
        <div class="col-lg-6 text-center">

          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Line 98</h5>
              <div class="container d-flex justify-content-center align-items-center">
                <div id="gameBoard" class="shadow bg-white rounded">
                    <table class="table table-bordered text-center align-middle">
                        <tbody>
                            <tr>
                                <td id="cell-0-0"></td>
                                <td id="cell-0-1"></td>
                                <td id="cell-0-2"></td>
                                <td id="cell-0-3"></td>
                                <td id="cell-0-4"></td>
                                <td id="cell-0-5"></td>
                                <td id="cell-0-6"></td>
                                <td id="cell-0-7"></td>
                                <td id="cell-0-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-1-0"></td>
                                <td id="cell-1-1"></td>
                                <td id="cell-1-2"></td>
                                <td id="cell-1-3"></td>
                                <td id="cell-1-4"></td>
                                <td id="cell-1-5"></td>
                                <td id="cell-1-6"></td>
                                <td id="cell-1-7"></td>
                                <td id="cell-1-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-2-0"></td>
                                <td id="cell-2-1"></td>
                                <td id="cell-2-2"></td>
                                <td id="cell-2-3"></td>
                                <td id="cell-2-4"></td>
                                <td id="cell-2-5"></td>
                                <td id="cell-2-6"></td>
                                <td id="cell-2-7"></td>
                                <td id="cell-2-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-3-0"></td>
                                <td id="cell-3-1"></td>
                                <td id="cell-3-2"></td>
                                <td id="cell-3-3"></td>
                                <td id="cell-3-4"></td>
                                <td id="cell-3-5"></td>
                                <td id="cell-3-6"></td>
                                <td id="cell-3-7"></td>
                                <td id="cell-3-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-4-0"></td>
                                <td id="cell-4-1"></td>
                                <td id="cell-4-2"></td>
                                <td id="cell-4-3"></td>
                                <td id="cell-4-4"></td>
                                <td id="cell-4-5"></td>
                                <td id="cell-4-6"></td>
                                <td id="cell-4-7"></td>
                                <td id="cell-4-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-5-0"></td>
                                <td id="cell-5-1"></td>
                                <td id="cell-5-2"></td>
                                <td id="cell-5-3"></td>
                                <td id="cell-5-4"></td>
                                <td id="cell-5-5"></td>
                                <td id="cell-5-6"></td>
                                <td id="cell-5-7"></td>
                                <td id="cell-5-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-6-0"></td>
                                <td id="cell-6-1"></td>
                                <td id="cell-6-2"></td>
                                <td id="cell-6-3"></td>
                                <td id="cell-6-4"></td>
                                <td id="cell-6-5"></td>
                                <td id="cell-6-6"></td>
                                <td id="cell-6-7"></td>
                                <td id="cell-6-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-7-0"></td>
                                <td id="cell-7-1"></td>
                                <td id="cell-7-2"></td>
                                <td id="cell-7-3"></td>
                                <td id="cell-7-4"></td>
                                <td id="cell-7-5"></td>
                                <td id="cell-7-6"></td>
                                <td id="cell-7-7"></td>
                                <td id="cell-7-8"></td>
                            </tr>
                            <tr>
                                <td id="cell-8-0"></td>
                                <td id="cell-8-1"></td>
                                <td id="cell-8-2"></td>
                                <td id="cell-8-3"></td>
                                <td id="cell-8-4"></td>
                                <td id="cell-8-5"></td>
                                <td id="cell-8-6"></td>
                                <td id="cell-8-7"></td>
                                <td id="cell-8-8"></td>
                            </tr>
                        </tbody>
                    </table>
                    <button id="startLine98" onclick="window.location.href='/line98'" class="btn btn-primary mt-3">play</button>
                </div>
            </div>
              
              <script>
                function getRandomColor() {
                  const colors = ["red", "blue", "green", "yellow", "purple", "orange", "pink"];
                  return colors[Math.floor(Math.random() * colors.length)];
              }
              
              function createMatrix() {
                  const newMatrix = Array.from({ length: 9 }, () => Array(9).fill(0));
              
                  // Tạo số 9
                  newMatrix[0][0] = { "type": 2, "color": getRandomColor() };
                  newMatrix[0][1] = { "type": 2, "color": getRandomColor() };
                  newMatrix[0][2] = { "type": 2, "color": getRandomColor() };
                  newMatrix[0][3] = { "type": 2, "color": getRandomColor() };

                  newMatrix[1][0] = { "type": 2, "color": getRandomColor() };
                  newMatrix[2][0] = { "type": 2, "color": getRandomColor() };
                  newMatrix[3][0] = { "type": 2, "color": getRandomColor() };
                  newMatrix[4][0] = { "type": 2, "color": getRandomColor() };

                  newMatrix[4][1] = { "type": 2, "color": getRandomColor() };
                  newMatrix[4][2] = { "type": 2, "color": getRandomColor() };

                  newMatrix[1][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[2][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[3][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[4][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[5][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[6][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[7][3] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][3] = { "type": 2, "color": getRandomColor() };

                  newMatrix[8][0] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][1] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][2] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][3] = { "type": 2, "color": getRandomColor() };
              
                  // Tạo số 8
                  newMatrix[0][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[0][6] = { "type": 2, "color": getRandomColor() };
                  newMatrix[0][7] = { "type": 2, "color": getRandomColor() };
                  newMatrix[0][8] = { "type": 2, "color": getRandomColor() };

                  newMatrix[1][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[2][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[3][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[4][5] = { "type": 2, "color": getRandomColor() };

                  newMatrix[4][6] = { "type": 2, "color": getRandomColor() };
                  newMatrix[4][7] = { "type": 2, "color": getRandomColor() };

                  newMatrix[1][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[2][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[3][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[4][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[5][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[6][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[7][8] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][8] = { "type": 2, "color": getRandomColor() };

                  newMatrix[8][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][6] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][7] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][8] = { "type": 2, "color": getRandomColor() };

                  newMatrix[5][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[6][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[7][5] = { "type": 2, "color": getRandomColor() };
                  newMatrix[8][5] = { "type": 2, "color": getRandomColor() };

                  return newMatrix;
              }

                function displayMatrix() {
                  const matrix = createMatrix();
                    for (let row = 0; row < 9; row++) {
                        for (let col = 0; col < 9; col++) {
                            let cell = document.getElementById(`cell-${row}-${col}`);
                            cell.innerHTML = '';
                            let value = matrix[row][col];
            
                            if (value === 0) {
                                cell.innerHTML = '';
                            } else if (value.type && value.color) {
                                if (value.type === 1) {
                                    let ball = document.createElement('div');
                                    ball.className = 'small-ball';
                                    ball.style.backgroundColor = value.color;
                                    cell.appendChild(ball);
                                } else {
                                    let ball = document.createElement('div');
                                    ball.className = 'ball';
                                    ball.style.backgroundColor = value.color;
                                    cell.appendChild(ball);
                                // cell.innerHTML = value.type === 1 ? 'Small Ball' : 'Large Ball';
                            }
                        }
                    }
                }
              }
              setInterval(displayMatrix, 500);
            </script>
            

            </div>
          </div>

        </div>

        <div class="col-lg-6">

          <div class="card">
            <div class="card-body">
              <h5 class="card-title text-center">Cờ Caro</h5>
              <p>Tạo phòng hoặc tham gia trận đấu cờ caro với người chơi khác.</p>
              <button id="playCaro" onclick="window.location.href='/caro?play=true'" class="btn btn-primary mt-3">play</button>

              <div class="container mt-5">
                <h2 class="mb-4">Tham gia trận đấu</h2>
                <div class="table-responsive">
                    <table id="caroRooms" class="table table-striped table-hover datatable">
                        <thead class="">

                        </thead>
                        <tbody id="dataTableBody">

                        </tbody>
                    </table>
                </div>
            </div>


            </div>
          </div>

        </div>
      </div>
    </section>

  </main><!-- End #main -->

  <!-- ======= Footer ======= -->
  <footer id="footer" class="footer">
    <div class="copyright">
      &copy; Copyright <strong><span>NiceAdmin</span></strong>. All Rights Reserved
    </div>
    <div class="credits">
      <!-- All the links in the footer should remain intact. -->
      <!-- You can delete the links only if you purchased the pro version. -->
      <!-- Licensing information: https://bootstrapmade.com/license/ -->
      <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/ -->
      Designed by <a href="https://bootstrapmade.com/">BootstrapMade</a>
    </div>
  </footer><!-- End Footer -->

  <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i
      class="bi bi-arrow-up-short"></i></a>

  <!-- Vendor JS Files -->
  <script src="vendor/apexcharts/apexcharts.min.js"></script>
  <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="vendor/chart.js/chart.umd.js"></script>
  <script src="vendor/echarts/echarts.min.js"></script>
  <script src="vendor/quill/quill.js"></script>
  <script src="vendor/tinymce/tinymce.min.js"></script>
  <script src="vendor/php-email-form/validate.js"></script>
  <!-- Template Main JS File -->
  <script src="js/main.js"></script>
  <!-- socket -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.js"></script>

   <script>
    let socket = undefined;
    const apiUrl = '<%= apiUrl %>';
    socket = io(`${apiUrl}`);
     let matrix = undefined;
     socket.on('connect', () => {
       console.log('Đã kết nối với server');
     });
     document.addEventListener("DOMContentLoaded", function() {
 
     });
 
     function updateCaroRooms() {
       socket.emit('getCaroRooms');
       socket.on('caroRooms', (data) => {
         // Lọc các phòng chỉ có 1 người chơi
         const roomsWithOnePlayer = data.filter(room => room.players.length === 1);
         
         const tableData = roomsWithOnePlayer.map(room => ({
           gameId: room.gameId,
           username: room.players[0], 
         }));

         if ($.fn.dataTable.isDataTable('#caroRooms')) {
           $('#caroRooms').DataTable().clear().destroy();
         }
     
         new DataTable('#caroRooms', {
           data: tableData,
           columns: [
             { data: null, title: '#', render: (data, type, row, meta) => meta.row + 1 }, 
             { data: 'gameId', title: 'ID' }, 
             { data: 'username', title: 'Username' }, 
             {
               data: null,
               title: 'Join game',
               render: (data, type, row) => `
                 <div class="actions" style="display: flex;">
                   <button class="btn btn-sm btn-primary" onclick="window.location.href = '/caro?gameId=${row.gameId}'">
                     Join
                   </button>
                 </div>
               ` 
             }
           ]
         });
       });
     }
     $(document).ready(function() {
       updateCaroRooms();
 
       setInterval(updateCaroRooms, 3000); // 3000ms = 3 giây
     });
     
 
   </script>
 
 
   <script>
     if (userData) {
         user = JSON.parse(userData);
 
         // In ra thông tin
         console.log('User ID:', user.id);
         console.log('Username:', user.username);
        const usernameElements = document.getElementsByClassName('usernameDisplay');
 
        if (usernameElements.length > 0) {
            usernameElements[0].innerText = user.username;
            usernameElements[1].innerText = user.username;
        }
     } else {
         console.log('Không có thông tin người dùng trong sessionStorage');
     }
 
 
   </script>
 </body>
 
 </html>